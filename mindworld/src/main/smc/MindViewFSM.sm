%{
%}

%class MindView
%package mindworld
%fsmclass MindViewFSM
%import prefuse.visual.NodeItem
%import java.awt.dnd.DragSource
%import prefuse.util.ui.UILib
%import prefuse.controls.Control
%import java.awt.event.MouseEvent

%start MindViewStateMap::Normal

%map MindViewStateMap
%%

Normal
Exit
    {
        stopCursorTimer();
    }
Entry
    {
        setMouseControlEnabled(true);
        renderTree();
        setCursor(null);
    }
{

    itemDragged(nodeItem: NodeItem)
        Dragging
        {
        }

    startEditing
        Editing
        {
            startEditing();
        }

    startInserting(asChild: boolean)
        [ ctxt.canStartInserting(asChild) ]
        Inserting
        {
            startInserting(asChild);
        }

    Default
        nil
    {

    }
}

Editing
Entry
    {
        setMouseControlEnabled(false);
    }
{
    ok
        Normal
        {
            stopEditing(true);
        }
    cancel
        Normal
        {
            stopEditing(false);
        }
    Default
        nil
    {

    }
}

Inserting
Entry
    {
        setMouseControlEnabled(false);
    }
{
    ok(fromPrompter: boolean)
        Normal
        {
            stopInserting(true, fromPrompter);
        }
    cancel
        Normal
        {
            stopInserting(false, false);
        }
    Default
        nil
    {

    }
}

Dragging
{
    itemDropped(draggedNode: NodeItem, droppedNode: NodeItem, hitPosition: NodeDndControl.HitPosition, dragAction: NodeDndControl.DragAction)
        Normal
        {
            dragAndDropNode(draggedNode, droppedNode, hitPosition, dragAction);
        }

    cancel
        Normal
        {

        }
    Default
        nil
    {

    }
}

%%
